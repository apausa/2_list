{"version":3,"sources":["redux/actions/taskActions.ts","components/input/Input.tsx","redux/actions/taskCreator.ts","components/title/Title.tsx","components/placeholder/Placeholder.tsx","components/List.tsx","mocks/listMock.ts","redux/reducers/index.ts","redux/reducers/taskReducer.ts","redux/store/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Input","dispatch","useDispatch","useState","description","setDescription","create","value","which","task","state","type","actions","className","name","placeholder","onChange","target","onKeyPress","Title","list","useSelector","taskReducer","length","setLength","useEffect","reduce","previous","current","Placeholder","List","remove","removeTask","update","updateTask","map","onClick","combineReducers","initial","action","filter","configureStore","initialState","composedEnhancers","compose","applyMiddleware","thunkMiddleware","createStore","rootReducer","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3b64f95.chunk.js","sourcesContent":["export default {\n  CREATE_TASK: 'CREATE_TASK',\n  REMOVE_TASK: 'REMOVE_TASK',\n  UPDATE_TASK: 'UPDATE_TASK',\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createTask } from '../../redux/actions/taskCreator';\nimport './inputStyles.scss';\n\nexport default function Input() {\n  const dispatch = useDispatch();\n  const [description, setDescription] = useState('');\n  const create = (value: string, which: number) => {\n    if (which !== 13 || !value) return;\n    dispatch(createTask({ description, state: false }));\n    setDescription('');\n  };\n  return (\n    <input\n      className=\"main__input\"\n      type=\"text\"\n      name=\"input\"\n      placeholder=\"Write your reminder\"\n      value={description}\n      onChange={({ target: { value } }: any) => setDescription(value)}\n      onKeyPress={({ target: { value }, which }: any) => { create(value, which); }}\n    />\n  );\n}\n","import actions from './taskActions';\nimport { Task } from '../../types/interfaces';\n\nexport function createTask(task: Task) {\n  return (dispatch: any) => {\n    dispatch({\n      type: actions.CREATE_TASK,\n      task,\n    });\n  };\n}\n\nexport function removeTask(task: Task) {\n  return (dispatch: any) => {\n    dispatch({\n      type: actions.REMOVE_TASK,\n      task,\n    });\n  };\n}\n\nexport function updateTask(task: Task) {\n  return (dispatch: any) => {\n    dispatch({\n      type: actions.UPDATE_TASK,\n      task,\n    });\n  };\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React, { useEffect, useState } from 'react';\nimport './titleStyles.scss';\nimport { useSelector } from 'react-redux';\n\nexport default function Title() {\n  const list = useSelector(({ taskReducer }: any) => taskReducer);\n  const [length, setLength] = useState(0);\n  useEffect(() => {\n    setLength(list.reduce((previous: any, current: any) => (\n      (current.state === false) ? previous + 1 : previous), 0));\n  }, [list]);\n  return (\n    <hgroup className=\"main__titles\">\n      <h1 className=\"title__reminders\">Reminders</h1>\n      <h2 className=\"title__length\">{length}</h2>\n    </hgroup>\n  );\n}\n","import React from 'react';\nimport './placeholderStyles.scss';\n\nconst Placeholder = () => <div className=\"main__placeholder\">Write you first task!</div>;\n\nexport default Placeholder;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { removeTask, updateTask } from '../redux/actions/taskCreator';\nimport { Task } from '../types/interfaces';\nimport Input from './input/Input';\nimport Title from './title/Title';\nimport Placeholder from './placeholder/Placeholder';\nimport './pageStyles.scss';\n\nexport default function List() {\n  const dispatch = useDispatch();\n  const list = useSelector(({ taskReducer }: any) => taskReducer);\n  const remove = (task: Task) => dispatch(removeTask(task));\n  const update = (task: any) => dispatch(updateTask(task));\n  return (\n    <main className=\"main\">\n      <Title />\n      <Input />\n      { (list.length === 0)\n        ? <Placeholder />\n        : (\n          <ul className=\"main__list\">\n            { list.map((task: Task) => (\n              <li className=\"list__task\">\n                <form className=\"task__form\">\n                  <button\n                    className={(task.state === false)\n                      ? 'form__text--unstriked'\n                      : 'form__text--striked'}\n                    type=\"button\"\n                    onClick={() => update(task)}\n                  >\n                    {task.description}\n                  </button>\n                  <button\n                    className=\"form__remove\"\n                    type=\"button\"\n                    onClick={() => remove(task)}\n                  >\n                    X\n                  </button>\n                </form>\n              </li>\n            ))}\n          </ul>\n        )}\n    </main>\n  );\n}\n","export default [\n  {\n    description: 'Finalize kickoff materials',\n    state: false,\n  },\n  {\n    description: 'Refine objectives',\n    state: false,\n  },\n  {\n    description: 'Identify key resources',\n    state: false,\n  },\n  {\n    description: 'Update contractor agreement',\n    state: false,\n  },\n  {\n    description: 'Conduct risk assesment',\n    state: false,\n  },\n  {\n    description: 'Monitor budget',\n    state: false,\n  },\n  {\n    description: 'Develop communication plan',\n    state: false,\n  },\n];\n","import { combineReducers } from 'redux';\nimport taskReducer from './taskReducer';\n\n// For scalability purposes.\nexport default combineReducers({\n  taskReducer,\n});\n","/* eslint-disable no-param-reassign */\nimport actions from '../actions/taskActions';\nimport { Task, Action } from '../../types/interfaces';\nimport List from '../../mocks/listMock';\n\nexport default function Reducer(initial: Task[] = List, action: Action) {\n  let list = initial;\n  const removeTask = (task: Task) => task !== action.task;\n  const updateTask = (task: Task) => {\n    if (task === action.task) task.state = (task.state === false);\n    return task;\n  };\n  if (action.type === actions.CREATE_TASK) list = [action.task, ...list];\n  if (action.type === actions.REMOVE_TASK) list = list.filter(removeTask);\n  if (action.type === actions.UPDATE_TASK) list = list.map(updateTask);\n  return list;\n}\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nexport default function configureStore(initialState?: any) {\n  const composedEnhancers = compose(applyMiddleware(thunkMiddleware));\n  return createStore(rootReducer, initialState, composedEnhancers);\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport List from './components/List';\nimport configureStore from './redux/store';\n\nfunction App() {\n  return (\n    <Provider store={configureStore()}>\n      <List />\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}